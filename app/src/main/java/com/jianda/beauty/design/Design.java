package com.jianda.beauty.design;

/**
 * 设计模式分为三大类：
 * <p>
 * 创建型模式，共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。
 * <p>
 * 结构型模式，共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。
 * <p>
 * 行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。
 * <p>
 * 设计模式的六大原则
 * 一.单一职责原则
 * 1.一个类只负责一项职责,逻辑简洁
 * 2.降低类的复杂程度,提高类的可读性和维护性,
 * 3.当发生变化时,只在当前类中作出修改,能将变化影响降低到最小
 * <p>
 * 二.开闭原则
 * 1.用抽象构建框架,用实现扩展细节
 * 2.当需要修改时,只需修改抽象派生的具体类
 * <p>
 * 三.里氏原则
 * 定义:所有引用基类的地方必须能透明的使用其子类的对象
 * <p>
 * 四.依赖倒置原则
 * 定义:
 * <p>
 * <p>
 * 五.迪米特原则
 * 定义:一个对象应该对其他对象保持最小的了解
 * <p>
 * 六.接口隔离原则
 **/


public class Design {

}
